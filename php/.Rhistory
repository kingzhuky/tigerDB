Path='/bakup/tiger/'
resPath="/bakup/tiger/"
}
Args <- commandArgs(T)
Args <- c("BCC","All","T cell,B cell,pDC,NK",'CXCL13')
cancer_type=Args[1]
global.cluster=Args[2] #All\Tcell\Bcell
sub.cluster <- unlist(strsplit(Args[3],split=',')) #T cell_B cell_pDC_NK
gene = Args[4]
maintitle <- paste(paste(cancer_type,collapse = "_"),paste(global.cluster,collapse = "_"),
paste(sub.cluster,collapse = "_"),
gene,sep="-")
metadata=readRDS(paste0(Path,cancer_type,'/',cancer_type,'/',cancer_type,'.metadata.rds'))
pic.DEA=function(global.cluster , sub.cluster, gene){
now.meta=metadata[[global.cluster]]
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
now.data=now.data+scale_x_discrete(limits=sub.cluster)+scale_fill_manual(values = colors)
now.data$labels$title=gene
maintitle1=paste0(maintitle,'.p1.png')
ggsave(paste0(resPath,'img/',maintitle1,now.data))
now.now.data=now.data$data
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data[now.now.data$gene>3,'gene']=3
now.now.data[now.now.data$gene< -3,'gene']= -3
p=ggplot(now.now.data,aes(x=tSNE_1,y=tSNE_2,color=gene))+geom_point(size=0.5)+scale_color_gradientn(colors = c('#cacaca30','white','red'))+mytheme
maintitle2=paste0(maintitle,'.p2.png')
ggsave(paste0(resPath,'img/',maintitle2,p))
maintitle5=paste(maintitle1,maintitle2,sep="_")
if(!is.null(levels(now.meta$Response))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data=now.now.data[now.now.data$Tissue=='Tumor',]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Response))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values = c('blue','red'))+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle3=paste0(maintitle,'.p3.png')
ggsave(paste0(resPath,'img/',maintitle3,p))
maintitle5=paste(maintitle5,maintitle3,sep="_")
}
if(!is.null(levels(now.meta$Tissue))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Tissue))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values =colors)+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle4=paste0(maintitle,'.p4.png')
ggsave(paste0(resPath,'img/',maintitle4,p))
maintitle5=paste(maintitle5,maintitle4,sep="_")
}
if(!is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue)) ){
cat(4)
}else if(is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue))){
cat(3)
}else if(!is.null(levels(now.meta$Response)) & is.null(levels(now.meta$Tissue))){
cat(3)
}else{
cat(2)
}
return(maintitle5)
}
maintitle5=pic.DEA(global.cluster , sub.cluster, gene)
maintitle5=pic.DEA(global.cluster , sub.cluster, gene)
now.meta=metadata[[global.cluster]]
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
now.data=now.data+scale_x_discrete(limits=sub.cluster)+scale_fill_manual(values = colors)
now.data$labels$title=gene
maintitle1=paste0(maintitle,'.p1.png')
ggsave(paste0(resPath,'img/',maintitle1,now.data))
maintitle1
ggsave(paste0(resPath,'img/',maintitle1),now.data)
pic.DEA=function(global.cluster , sub.cluster, gene){
now.meta=metadata[[global.cluster]]
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
now.data=now.data+scale_x_discrete(limits=sub.cluster)+scale_fill_manual(values = colors)
now.data$labels$title=gene
maintitle1=paste0(maintitle,'.p1.png')
ggsave(paste0(resPath,'img/',maintitle1),now.data)
now.now.data=now.data$data
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data[now.now.data$gene>3,'gene']=3
now.now.data[now.now.data$gene< -3,'gene']= -3
p=ggplot(now.now.data,aes(x=tSNE_1,y=tSNE_2,color=gene))+geom_point(size=0.5)+scale_color_gradientn(colors = c('#cacaca30','white','red'))+mytheme
maintitle2=paste0(maintitle,'.p2.png')
ggsave(paste0(resPath,'img/',maintitle2),p)
maintitle5=paste(maintitle1,maintitle2,sep="_")
if(!is.null(levels(now.meta$Response))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data=now.now.data[now.now.data$Tissue=='Tumor',]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Response))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values = c('blue','red'))+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle3=paste0(maintitle,'.p3.png')
ggsave(paste0(resPath,'img/',maintitle3),p)
maintitle5=paste(maintitle5,maintitle3,sep="_")
}
if(!is.null(levels(now.meta$Tissue))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Tissue))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values =colors)+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle4=paste0(maintitle,'.p4.png')
ggsave(paste0(resPath,'img/',maintitle4),p)
maintitle5=paste(maintitle5,maintitle4,sep="_")
}
if(!is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue)) ){
cat(4)
}else if(is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue))){
cat(3)
}else if(!is.null(levels(now.meta$Response)) & is.null(levels(now.meta$Tissue))){
cat(3)
}else{
cat(2)
}
return(maintitle5)
}
maintitle5=pic.DEA(global.cluster , sub.cluster, gene)
cat(maintitle5)
pic.DEA=function(global.cluster , sub.cluster, gene){
now.meta=metadata[[global.cluster]]
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
now.data=now.data+scale_x_discrete(limits=sub.cluster)+scale_fill_manual(values = colors)
now.data$labels$title=gene
maintitle1=paste0(maintitle,'.p1.png')
ggsave(paste0(resPath,'img/',maintitle1),now.data)
now.now.data=now.data$data
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data[now.now.data$gene>3,'gene']=3
now.now.data[now.now.data$gene< -3,'gene']= -3
p=ggplot(now.now.data,aes(x=tSNE_1,y=tSNE_2,color=gene))+geom_point(size=0.5)+scale_color_gradientn(colors = c('#cacaca30','white','red'))+mytheme
maintitle2=paste0(maintitle,'.p2.png')
ggsave(paste0(resPath,'img/',maintitle2),p)
maintitle5=paste(maintitle1,maintitle2,sep=",")
if(!is.null(levels(now.meta$Response))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data=now.now.data[now.now.data$Tissue=='Tumor',]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Response))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values = c('blue','red'))+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle3=paste0(maintitle,'.p3.png')
ggsave(paste0(resPath,'img/',maintitle3),p)
maintitle5=paste(maintitle5,maintitle3,sep=",")
}
if(!is.null(levels(now.meta$Tissue))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Tissue))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values =colors)+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle4=paste0(maintitle,'.p4.png')
ggsave(paste0(resPath,'img/',maintitle4),p)
maintitle5=paste(maintitle5,maintitle4,sep=",")
}
if(!is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue)) ){
cat(4)
}else if(is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue))){
cat(3)
}else if(!is.null(levels(now.meta$Response)) & is.null(levels(now.meta$Tissue))){
cat(3)
}else{
cat(2)
}
return(maintitle5)
}
maintitle5=pic.DEA(global.cluster , sub.cluster, gene)
cat(maintitle5)
library(stringr);library(plyr);library(ggplot2);library(data.table);library(magrittr);library(ggpubr);library(circlize)
mytheme <- theme_bw() +
theme(plot.title=element_text(size=rel(2),hjust=0.5),
axis.title=element_text(size=rel(1)),
axis.text.x = element_text(angle=0,hjust=0.5, vjust=0.5,size = rel(1.2)),
axis.text.y = element_text(angle=0,hjust=0.5, vjust=0.5,size = rel(1.2)),
panel.grid.major=element_line(color="white"),
panel.grid.minor=element_line(color="white"),
panel.border=element_rect(color="black",size=1),
axis.line=element_line(color="black",size=0.5))
colors=c("#cc4a5399",'#00ADDB99','#7142AC99',"#42B54099",'#00008099','#07702b99',"#7FFF0099","#AD002A","#ED000099",'#ABD20599','#F0BE7E','#4D221399',"#FDAF9199",'#85E1D099','#C979CD99','#F26A1299',"#ADB6B699",'#4B79AB99',"#0099B499",'#FF149399','#00800099',"#1B191999")
if(Sys.info()[1]=="Windows"){
Path='E:/hongwan/'
resPath="D:/javascript/tigetData/"
}else{
Path='/bakup/tiger/'
resPath="/bakup/tiger/"
}
Args <- commandArgs(T)
Args <- c("BCC","CAF,Tumor,pDC,NK",'HLA-A','CD3G')
cancer_type=Args[1]
sub.cluster <- unlist(strsplit(Args[2],split=',')) #T cell_B cell_pDC_NK
ligand = Args[3]
receptor=Args[4]
crosstalk.result=readRDS(paste0(Path,cancer_type,'/',cancer_type,'/',cancer_type,'.crosstalk.result.rds'))
pic.cross=function(sub.cluster,ligand,receptor){
now.crosstalk.result=crosstalk.result
for(i in 1:length(now.crosstalk.result)){
now.crosstalk.result[[i]]=now.crosstalk.result[[i]][now.crosstalk.result[[i]]$cell_from %in% sub.cluster & now.crosstalk.result[[i]]$cell_to %in% sub.cluster,]
}
for(i in 1:length(now.crosstalk.result)){
data=now.crosstalk.result[[i]]
cell_group <- unique(c(data$cell_from, data$cell_to))
genes <- c(structure(data$ligand, names = data$cell_from),
structure(data$receptor, names = data$cell_to))
genes <- genes[!duplicated(paste(names(genes), genes))]
genes <- genes[order(names(genes))]
transparency = 0.5;track.height_1 = uh(2,"mm");track.height_2 = uh(12, "mm"); annotation.height_1 = 0.01;annotation.height_2 = 0.01
link.arr.lty = "solid";data <- data %>% mutate(link_col = "#d2d2d2");link.arr.type = "triangle"
link.arr.lwd=data$cell_from_mean_exprs;link.arr.width=data$cell_to_mean_exprs
data <- data %>% mutate(arr_width = ifelse(link.arr.lwd == 1e-04, 2, 0.5 + 5/(max(abs(link.arr.lwd)) - min(abs(link.arr.lwd))) *
(abs(link.arr.lwd) - min(abs(link.arr.lwd)))))
data <- data %>% mutate(arr_width = 1)
# data <- data %>% mutate(link.arr.width = data$arr_width/10)
data <- data %>% mutate(link.arr.width = ifelse(link.arr.width == 1e-04, 0.2, (0.5 + 5/(max(abs(link.arr.width)) - min(abs(link.arr.width))) * (abs(link.arr.width) - min(abs(link.arr.width))))/10))
comm_col <- structure(c("#99ff99", "#99ccff", "#ff9999","#ffcc99"), names = c("other", "cytokine", "checkpoint","growth factor"))
gene_col <- structure(c(comm_col[data$comm_type], rep("#073c53",length(data$receptor))), names = c(data$ligand, data$receptor))
grid.col = gene_col[genes]
names(grid.col) <- paste(names(genes), genes)
cell_types=union(data$cell_from,data$cell_to)
cell_col <- structure(colors[1:length(cell_types)], names=cell_types)
gap.degree <- do.call("c", lapply(table(names(genes)),function(i) c(rep(1, i - 1), 8)))
circos.par(gap.degree = gap.degree)
data.new=data
data.new[data.new$ligand!=ligand,'arr_width']=0
data.new[data.new$ligand!=ligand,'link.arr.width']=NA
data.new[data.new$receptor==receptor,'link_col']='#e0146b'
png(file=paste0(Path,i,".png"),  width = 600, height = 600)
chordDiagram(as.data.frame(cbind(paste(data.new$cell_from, data.new$ligand),paste(data.new$cell_to, data.new$receptor))), order = paste(names(genes),genes), grid.col = grid.col, transparency = transparency,
directional = 1, link.arr.lwd = data.new$arr_width, direction.type = "arrows",
link.arr.lty = link.arr.lty, link.arr.type = link.arr.type,
link.arr.width = data.new$link.arr.width, link.arr.col = data.new$link_col,
col = "#00000000", annotationTrack = c("grid"), preAllocateTracks = list(list(track.height = track.height_1),list(track.height = track.height_2)), annotationTrackHeight = c(annotation.height_1,annotation.height_2))
for (c in unique(names(genes))) {
gene = as.character(genes[names(genes) == c])
highlight.sector(sector.index = paste(c, gene), track.index = 3,
col = ifelse(length(cell_col) == 1, cell_col,
cell_col[c]), text = c, text.vjust ="0.3cm", cex=1,
niceFacing = TRUE, lwd = par("lwd"))
}
circos.clear()
dev.off()
}
}
pic.cross(sub.cluster,ligand,receptor)
library(stringr);library(plyr);library(ggplot2);library(data.table);library(magrittr);library(ggpubr);
mytheme <- theme_bw() +
theme(plot.title=element_text(size=rel(2),hjust=0.5),
axis.title=element_text(size=rel(1)),
axis.text.x = element_text(angle=0,hjust=0.5, vjust=0.5,size = rel(1.2)),
axis.text.y = element_text(angle=0,hjust=0.5, vjust=0.5,size = rel(1.2)),
panel.grid.major=element_line(color="white"),
panel.grid.minor=element_line(color="white"),
panel.border=element_rect(color="black",size=1),
axis.line=element_line(color="black",size=0.5))
colors=c("#cc4a5399",'#00ADDB99','#7142AC99',"#42B54099",'#00008099','#07702b99',"#7FFF0099","#AD002A","#ED000099",'#ABD20599','#F0BE7E','#4D221399',"#FDAF9199",'#85E1D099','#C979CD99','#F26A1299',"#ADB6B699",'#4B79AB99',"#0099B499",'#FF149399','#00800099',"#1B191999")
if(Sys.info()[1]=="Windows"){
Path='E:/hongwan/'
resPath="D:/javascript/tigetData/"
}else{
Path='/bakup/tiger/'
resPath="/bakup/tiger/"
}
Args <- c("BCC",'All',"CAF,Tumor,pDC,NK",'CD247','0')
cancer_type=Args[1]
global.cluster=Args[2] #All\Tcell\Bcell
sub.cluster <- unlist(strsplit(Args[3],split=',')) #T cell_B cell_pDC_NK
gene = Args[4]
show_response=Args[5]
maintitle <- paste(paste(cancer_type,collapse = "_"),paste(global.cluster,collapse = "_"),
paste(sub.cluster,collapse = "_"),
gene,show_response,sep="-")
Mono=readRDS(paste0(Path,cancer_type,'/',cancer_type,'/',cancer_type,'.Mono.rds'))
pic.evlou=function(global.cluster , sub.cluster, gene,show_response){
now.data.df= Mono[[global.cluster]][['data_df']]
now.edge.df=Mono[[global.cluster]][['edge_df']]
now.data.df=now.data.df[now.data.df$recluster %in% sub.cluster,]
if(show_response==0 & sum(colnames(now.data.df)=='Response')==1){
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster,shape=Response))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')+scale_shape_manual(values = c(1,9))
ggsave(paste0(resPath,'/img/',maintitle,'.p5.png'),width = 5.5,height = 5,p)
}else{
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p6.png'),width = 5.5,height = 5,p)
}
now.data=readRDS(paste0('/data3/liuxf/zhu/',cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
gene.exp=now.data$data
rownames(gene.exp)=rownames(gene.exp) %>% str_replace_all('-','.')
now.data.df[,'gene']=gene.exp[rownames(now.data.df),'gene']
now.data.df[now.data.df$gene>3,'gene']=3
now.data.df[now.data.df$gene< -3,'gene']=-3
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(1), na.rm = TRUE,aes(color=gene))+scale_color_gradientn(colours =  c('#0600ff99','#e5e5e830','#f6082999'),limits=c(-3,3))+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p7.png'),width = 5.5,height = 5,p)
}
pic.evlou(global.cluster , sub.cluster, gene,show_response)
pic.evlou=function(global.cluster , sub.cluster, gene,show_response){
now.data.df= Mono[[global.cluster]][['data_df']]
now.edge.df=Mono[[global.cluster]][['edge_df']]
now.data.df=now.data.df[now.data.df$recluster %in% sub.cluster,]
if(show_response==0 & sum(colnames(now.data.df)=='Response')==1){
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster,shape=Response))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')+scale_shape_manual(values = c(1,9))
ggsave(paste0(resPath,'/img/',maintitle,'.p5.png'),width = 5.5,height = 5,p)
}else{
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p6.png'),width = 5.5,height = 5,p)
}
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
gene.exp=now.data$data
rownames(gene.exp)=rownames(gene.exp) %>% str_replace_all('-','.')
now.data.df[,'gene']=gene.exp[rownames(now.data.df),'gene']
now.data.df[now.data.df$gene>3,'gene']=3
now.data.df[now.data.df$gene< -3,'gene']=-3
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(1), na.rm = TRUE,aes(color=gene))+scale_color_gradientn(colours =  c('#0600ff99','#e5e5e830','#f6082999'),limits=c(-3,3))+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p7.png'),width = 5.5,height = 5,p)
}
pic.evlou(global.cluster , sub.cluster, gene,show_response)
cat(maintitle)
pic.evlou=function(global.cluster , sub.cluster, gene,show_response){
now.data.df= Mono[[global.cluster]][['data_df']]
now.edge.df=Mono[[global.cluster]][['edge_df']]
now.data.df=now.data.df[now.data.df$recluster %in% sub.cluster,]
if(show_response==0 & sum(colnames(now.data.df)=='Response')==1){
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster,shape=Response))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')+scale_shape_manual(values = c(1,9))
ggsave(paste0(resPath,'/img/',maintitle,'.p5.png'),width = 5.5,height = 5,p)
maintitle1=paste0(resPath,'/img/',maintitle,'.p5.png')
}else{
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p6.png'),width = 5.5,height = 5,p)
maintitle1=paste0(resPath,'/img/',maintitle,'.p6.png')
}
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
gene.exp=now.data$data
rownames(gene.exp)=rownames(gene.exp) %>% str_replace_all('-','.')
now.data.df[,'gene']=gene.exp[rownames(now.data.df),'gene']
now.data.df[now.data.df$gene>3,'gene']=3
now.data.df[now.data.df$gene< -3,'gene']=-3
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(1), na.rm = TRUE,aes(color=gene))+scale_color_gradientn(colours =  c('#0600ff99','#e5e5e830','#f6082999'),limits=c(-3,3))+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p7.png'),width = 5.5,height = 5,p)
maintitle2=paste0(resPath,'/img/',maintitle,'.p7.png')
}
pic.evlou(global.cluster , sub.cluster, gene,show_response)
cat(paste0(maintitle1,maintitle2,sep=","))
pic.evlou=function(global.cluster , sub.cluster, gene,show_response){
now.data.df= Mono[[global.cluster]][['data_df']]
now.edge.df=Mono[[global.cluster]][['edge_df']]
now.data.df=now.data.df[now.data.df$recluster %in% sub.cluster,]
if(show_response==0 & sum(colnames(now.data.df)=='Response')==1){
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster,shape=Response))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')+scale_shape_manual(values = c(1,9))
ggsave(paste0(resPath,'/img/',maintitle,'.p5.png'),width = 5.5,height = 5,p)
maintitle1=paste0(resPath,'/img/',maintitle,'.p5.png')
}else{
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p6.png'),width = 5.5,height = 5,p)
maintitle1=paste0(resPath,'/img/',maintitle,'.p6.png')
}
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
gene.exp=now.data$data
rownames(gene.exp)=rownames(gene.exp) %>% str_replace_all('-','.')
now.data.df[,'gene']=gene.exp[rownames(now.data.df),'gene']
now.data.df[now.data.df$gene>3,'gene']=3
now.data.df[now.data.df$gene< -3,'gene']=-3
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(1), na.rm = TRUE,aes(color=gene))+scale_color_gradientn(colours =  c('#0600ff99','#e5e5e830','#f6082999'),limits=c(-3,3))+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p7.png'),width = 5.5,height = 5,p)
maintitle2=paste0(resPath,'/img/',maintitle,'.p7.png')
cat(paste0(maintitle1,maintitle2,sep=","))
}
pic.evlou(global.cluster , sub.cluster, gene,show_response)
pic.evlou=function(global.cluster , sub.cluster, gene,show_response){
now.data.df= Mono[[global.cluster]][['data_df']]
now.edge.df=Mono[[global.cluster]][['edge_df']]
now.data.df=now.data.df[now.data.df$recluster %in% sub.cluster,]
if(show_response==0 & sum(colnames(now.data.df)=='Response')==1){
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster,shape=Response))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')+scale_shape_manual(values = c(1,9))
ggsave(paste0(resPath,'/img/',maintitle,'.p5.png'),width = 5.5,height = 5,p)
maintitle1=paste0(maintitle,'.p5.png')
}else{
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(0.8), na.rm = TRUE,aes(color=recluster))+scale_color_manual(values = colors)+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p6.png'),width = 5.5,height = 5,p)
maintitle1=paste0(maintitle,'.p6.png')
}
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
gene.exp=now.data$data
rownames(gene.exp)=rownames(gene.exp) %>% str_replace_all('-','.')
now.data.df[,'gene']=gene.exp[rownames(now.data.df),'gene']
now.data.df[now.data.df$gene>3,'gene']=3
now.data.df[now.data.df$gene< -3,'gene']=-3
p <- ggplot(data = now.data.df, aes(x = data_dim_1,y = data_dim_2))+
geom_segment(aes_string(x = "source_prin_graph_dim_1",y = "source_prin_graph_dim_2", xend = "target_prin_graph_dim_1",yend = "target_prin_graph_dim_2"), size = 1,
linetype = "solid", na.rm = TRUE, data = now.edge.df)+ geom_point(size = I(1), na.rm = TRUE,aes(color=gene))+scale_color_gradientn(colours =  c('#0600ff99','#e5e5e830','#f6082999'),limits=c(-3,3))+mytheme+
guides(color=guide_legend(title = NULL))+labs(x='Component1',y='Component2')
ggsave(paste0(resPath,'/img/',maintitle,'.p7.png'),width = 5.5,height = 5,p)
maintitle2=paste0(maintitle,'.p7.png')
cat(paste0(maintitle1,maintitle2,sep=","))
}
pic.evlou(global.cluster , sub.cluster, gene,show_response)
cat(maintitle5)
library(stringr);library(plyr);library(ggplot2);library(data.table);library(magrittr);library(ggpubr);
colors=c("#cc4a53",'#00ADDB','#7142AC',"#42B540",'#000080','#07702b',"#7FFF00","#AD002A","#ED0000",'#ABD205','#F0BE7E','#4D2213',"#FDAF91",'#85E1D0','#C979CD','#F26A1299',"#ADB6B699",'#4B79AB99',"#0099B499",'#FF149399','#00800099',"#1B191999")
mytheme <- theme_bw() +
theme(plot.title=element_text(size=rel(2),hjust=0.5),
axis.title=element_text(size=rel(1)),
axis.text.x = element_text(angle=0,hjust=0.5, vjust=0.5,size = rel(1.2)),
axis.text.y = element_text(angle=0,hjust=0.5, vjust=0.5,size = rel(1.2)),
panel.grid.major=element_line(color="white"),
panel.grid.minor=element_line(color="white"),
panel.border=element_rect(color="black",size=1),
axis.line=element_line(color="black",size=0.5))
if(Sys.info()[1]=="Windows"){
Path='E:/hongwan/'
resPath="D:/javascript/tigetData/"
}else{
Path='/bakup/tiger/'
resPath="/bakup/tiger/"
}
Args <- commandArgs(T)
Args <- c("BCC","All","T cell,B cell,pDC,NK",'CXCL13')
cancer_type=Args[1]
global.cluster=Args[2] #All\Tcell\Bcell
sub.cluster <- unlist(strsplit(Args[3],split=',')) #T cell_B cell_pDC_NK
gene = Args[4]
maintitle <- paste(paste(cancer_type,collapse = "_"),paste(global.cluster,collapse = "_"),
paste(sub.cluster,collapse = "_"),
gene,sep="-")
metadata=readRDS(paste0(Path,cancer_type,'/',cancer_type,'/',cancer_type,'.metadata.rds'))
pic.DEA=function(global.cluster , sub.cluster, gene){
now.meta=metadata[[global.cluster]]
now.data=readRDS(paste0(Path,cancer_type,'/',cancer_type,'.gene/',global.cluster,'/',gene,'.rds'))
now.data=now.data+scale_x_discrete(limits=sub.cluster)+scale_fill_manual(values = colors)
now.data$labels$title=gene
maintitle1=paste0(maintitle,'.p1.png')
ggsave(paste0(resPath,'img/',maintitle1),now.data)
now.now.data=now.data$data
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data[now.now.data$gene>3,'gene']=3
now.now.data[now.now.data$gene< -3,'gene']= -3
p=ggplot(now.now.data,aes(x=tSNE_1,y=tSNE_2,color=gene))+geom_point(size=0.5)+scale_color_gradientn(colors = c('#cacaca30','white','red'))+mytheme
maintitle2=paste0(maintitle,'.p2.png')
ggsave(paste0(resPath,'img/',maintitle2),p)
maintitle5=paste(maintitle1,maintitle2,sep=",")
if(!is.null(levels(now.meta$Response))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
now.now.data=now.now.data[now.now.data$Tissue=='Tumor',]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Response))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values = c('blue','red'))+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle3=paste0(maintitle,'.p3.png')
ggsave(paste0(resPath,'img/',maintitle3),p)
maintitle5=paste(maintitle5,maintitle3,sep=",")
}
if(!is.null(levels(now.meta$Tissue))){
now.now.data=now.data$data
now.now.data=data.frame(now.meta,gene=now.now.data$gene)
now.now.data=now.now.data[now.now.data$recluster %in% sub.cluster,]
p=ggplot(now.now.data,aes(x=recluster,y=gene,fill=Tissue))+geom_boxplot(outlier.colour = NA)+mytheme+scale_fill_manual(values =colors)+ylim(-1,4)+
stat_compare_means(aes(group=Response,label = ..p.signif..),method ='t.test')+theme(axis.title = element_blank())
maintitle4=paste0(maintitle,'.p4.png')
ggsave(paste0(resPath,'img/',maintitle4),p)
maintitle5=paste(maintitle5,maintitle4,sep=",")
}
if(!is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue)) ){
cat(4)
}else if(is.null(levels(now.meta$Response)) & !is.null(levels(now.meta$Tissue))){
cat(3)
}else if(!is.null(levels(now.meta$Response)) & is.null(levels(now.meta$Tissue))){
cat(3)
}else{
cat(2)
}
return(maintitle5)
}
maintitle5=pic.DEA(global.cluster , sub.cluster, gene)
cat(maintitle5)
